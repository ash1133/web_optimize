;(function(){
    const allMenuBtn = document.querySelectorAll('[data-header-menu-btn]')

    for (const btn of allMenuBtn){
        btn.addEventListener('click', function(){
            if (btn.nextElementSibling.classList.contains('active')) {
                btn.classList.remove('active')
                btn.nextElementSibling.classList.remove('active')
                document.body.classList.remove('ovf_h')
            }
            else {
                btn.classList.add('active')
                btn.nextElementSibling.classList.add('active')
                document.body.classList.add('ovf_h')
            }
        })
    }
})();
;(function(){
    for (const tabs of document.querySelectorAll('[data-tabs]')){
        const list = tabs.querySelector('[data-tabs-list]')
        const item = tabs.querySelector('[data-tabs-item]')

        let alredyActive = false

        for (const li of list.children){
            if (li.classList.contains('active')) alredyActive = true

            li.addEventListener('click', function(){
                ClearActiveItem(item.children)
                ClearActiveList(list.children)

                li.classList.add('active')
                item.querySelector('[data-tab="'+li.dataset.tab+'"]').classList.add('active')
            })
        }

        if (!alredyActive)
            list.children[0].dispatchEvent(new Event('click'))
    }

    function ClearActiveItem(_item){
        for (const e of _item)
            e.classList.remove('active')
    }

    function ClearActiveList(_list){
        for (const e of _list)
            e.classList.remove('active')
    }
})();
;(function(){
    const allVideo = document.querySelectorAll('video')

    if (allVideo)
        for (const vid of allVideo){
            vid.addEventListener('click', function(){

                if (vid.paused) {
                    vid.play();
                }

                if (!vid.getAttribute('controls'))
                    vid.setAttribute('controls', 'controls')

            })
        }
})();
;(function(){
    const map = document.getElementById('yaMap')

    if (map && map.dataset.geoObject) {

        let geoObj = JSON.parse(map.dataset.geoObject)

        ymaps.ready(init);
        function init() {
            let myMap = new ymaps.Map('yaMap', {
                center: [55.717573, 37.840559],
                zoom: 10,
                controls: []
            });

            myMap.behaviors.disable(['scrollZoom'])

            for (const geo of geoObj)
                ymaps
                    .geocode(geo.query, {results: 1})
                    .then(function (res) {
                        let firstGeoObject = res.geoObjects.get(0),
                            coords = firstGeoObject.geometry.getCoordinates()

                        firstGeoObject.options.set('preset', 'islands#darkBlueDotIconWithCaption');
                        firstGeoObject.properties.set('iconCaption', firstGeoObject.getAddressLine());

                        let placemark = new ymaps.Placemark(coords, {
                            balloonContent: geo.query,
                            hintContent: geo.title,
                            balloonContentHeader: geo.title,
                        }, {
                            hideIconOnBalloonOpen: false,
                            balloonOffset: [100, -50],
                            balloonMaxWidth: 331,
                            iconLayout: 'default#image',
                            iconImageOffset: [-35, -80],
                            iconImageHref: geo.marker,
                            iconImageSize: [85, 100],
                        })

                        myMap.geoObjects.add(placemark);
                    })
        }
    }
})();